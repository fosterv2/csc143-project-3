#BlueJ class context
comment0.target=DrawInstruction
comment0.text=\r\n\ Code\ for\ the\ DrawInstruction\ class,\ managing\ a\ single\ drawing\ instruction\r\n\r\n\ @author\ \ \ \ \ \ Bill\ Barry\r\n\ @version\ \ \ \ \ 2017-09-07\r\n
comment1.params=shapeName\ scalePercent\ startingX\ startingY\ repeats\ repeatOffsetX\ repeatOffsetY\ filled\ color\ rotate\ repeatRotate
comment1.target=DrawInstruction(java.lang.String,\ int,\ int,\ int,\ int,\ int,\ int,\ boolean,\ java.awt.Color,\ int,\ int)
comment1.text=\r\n\ Constructor\ for\ the\ DrawInstruction\ class\r\n\r\n\ @param\ \ \ shapeName\ \ \ \ \ \ \ the\ friendly\ name\ assigned\ to\ the\ shape\r\n\ @param\ \ \ scalePercent\ \ \ \ the\ percent\ to\ which\ the\ shape\ should\ be\ scaled,\ when\ drawn,\ e.g.,\ 100\ indicates\ 100%\ of\ original\ size.\ \ If\ <\ 1,\ will\ be\ reset\ to\ 1.\r\n\ @param\ \ \ startingX\ \ \ \ \ \ \ the\ x\ coordinate\ at\ which\ the\ shape\ should\ be\ drawn.\ \ Use\ Integer.MIN_VALUE\ to\ request\ random\ placement\ on\ the\ canvas\r\n\ @param\ \ \ startingY\ \ \ \ \ \ \ the\ y\ coordinate\ at\ which\ the\ shape\ should\ be\ drawn.\ \ Use\ Integer.MIN_VALUE\ to\ request\ random\ placement\ on\ the\ canvas\r\n\ @param\ \ \ repeats\ \ \ \ \ \ \ \ \ the\ number\ of\ times\ the\ drawing\ should\ be\ repeated.\ \ Makes\ sense\ only\ with\ random\ placement\ or\ repeat\ offsets.\ \ If\ <\ 1,\ will\ be\ reset\ to\ 1.\r\n\ @param\ \ \ repeatOffsetX\ \ \ for\ repeated\ shapes,\ the\ x\ offset\ for\ each\ subsequent\ shape\r\n\ @param\ \ \ repeatOffsetY\ \ \ for\ repeated\ shapes,\ the\ y\ offset\ for\ each\ subsequent\ shape\r\n\ @param\ \ \ filled\ \ \ \ \ \ \ \ \ \ whether\ the\ shape\ should\ be\ filled\ in\ (true)\ or\ drawn\ in\ outline\ only\ (false)\r\n\ @param\ \ \ color\ \ \ \ \ \ \ \ \ \ \ the\ Color\ to\ use\ for\ drawing\ the\ shape\r\n\ @param\ \ \ rotate\ \ \ \ \ \ \ \ \ \ the\ angle\ the\ shape\ is\ to\ be\ rotated,\ in\ degrees,\ clockwise\ from\ original\ position\r\n\ \r\n\ @throws\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ IllegalArgumentException\ if\ the\ shape\ name\ is\ null\ or\ empty\r\n\ @throws\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ IllegalArgumentException\ if\ the\ color\ is\ null\r\n
comment10.params=
comment10.target=boolean\ getFilled()
comment10.text=\r\n\ Retrieves\ the\ filled\ setting\ for\ the\ shape\r\n\r\n\ @return\ \ \ \ \ \ whether\ fill\ is\ requested\ on\ the\ drawn\ shape\r\n
comment11.params=
comment11.target=java.awt.Color\ getColor()
comment11.text=\r\n\ Retrieves\ the\ Color\ to\ be\ used\ for\ drawing\ the\ shape\r\n\r\n\ @return\ \ \ \ \ \ the\ shape's\ Color\r\n
comment12.params=
comment12.target=int\ getRotate()
comment12.text=\r\n\ Retrieves\ the\ angle\ of\ rotation\ for\ the\ shape\r\n\ \r\n\ @return\ \ \ \ \ \ the\ rotation\ to\ be\ applied\ to\ the\ shape\r\n
comment13.params=
comment13.target=int\ getRepeatRotate()
comment13.text=\r\n\ Retrieves\ the\ repeat\ rotation\ angle\ for\ additional\ shapes;\ to\ be\ used\ with\ repeated\ shapes\r\n\ \r\n\ @return\ \ \ \ \ \ the\ rotation\ to\ be\ applied\ to\ each\ additional\ shape\ drawn\r\n
comment14.params=fileIn
comment14.target=DrawInstruction\ readFromFile(java.util.Scanner)
comment14.text=\r\n\ Reads\ an\ instruction\ from\ the\ supplied\ Scanner,\ and\ returns\ a\ corresponding\ Instruction\ object\r\n\r\n\ @param\ \ \ fileIn\ \ the\ Scanner\ object\ to\ use\ for\ retrieving\ instruction\ information\r\n\ @return\ \ \ \ \ \ \ \ \ \ an\ Instruction\ object\ containing\ the\ read\ instructions\ (plus\ defaults)\r\n
comment15.params=instruction
comment15.target=void\ validateOrDefault(DrawInstruction)
comment15.text=\r\n\ Validates\ the\ instruction\ information\ in\ an\ existing\ Instruction,\ setting\ any\ invalid\ data\ to\ defaults\r\n\r\n\ @param\ \ \ instruction\ \ \ \ \ an\ existing\ Instruction\ to\ validate\r\n
comment2.params=
comment2.target=DrawInstruction()
comment2.text=\r\n\ Private,\ empty\ constructor\ for\ Instruction\ class,\ useful\ for\ reading\ instructions\ from\ files,\ for\ example.\ \ Sets\ all\ values\ to\ initial\ defaults\r\n\r\n
comment3.params=
comment3.target=java.lang.String\ getShapeName()
comment3.text=\r\n\ Retrieves\ the\ name\ of\ the\ shape\r\n\r\n\ @return\ \ \ \ \ \ the\ name\ of\ the\ shape\r\n
comment4.params=
comment4.target=int\ getScalePercent()
comment4.text=\r\n\ Retrieves\ the\ percent\ at\ which\ the\ shape\ will\ be\ drawn\r\n\r\n\ @return\ \ \ \ \ \ the\ scaling\ percent\ for\ the\ shape\r\n
comment5.params=
comment5.target=int\ getStartingX()
comment5.text=\r\n\ Retrieves\ the\ starting\ x\ coordinate\ at\ which\ the\ shape\ will\ be\ drawn\r\n\r\n\ @return\ \ \ \ \ \ the\ starting\ x\ coordinate\ at\ which\ the\ shape\ will\ be\ drawn\r\n
comment6.params=
comment6.target=int\ getStartingY()
comment6.text=\r\n\ Retrieves\ the\ starting\ y\ coordinate\ at\ which\ the\ shape\ will\ be\ drawn\r\n\r\n\ @return\ \ \ \ \ \ the\ starting\ y\ coordinate\ at\ which\ the\ shape\ will\ be\ drawn\r\n
comment7.params=
comment7.target=int\ getRepeats()
comment7.text=\r\n\ Retrieves\ the\ number\ of\ requested\ repetitions\ of\ the\ shape\r\n\r\n\ @return\ \ \ \ \ \ the\ requested\ number\ of\ repetitions\ of\ the\ shape\r\n
comment8.params=
comment8.target=int\ getRepeatOffsetX()
comment8.text=\r\n\ Retrieves\ the\ x\ offset\ for\ subsequent\ drawings\ of\ repeated\ shapes\r\n\r\n\ @return\ \ \ \ \ \ the\ x\ offset\ for\ subsequent\ shape\ drawings\r\n
comment9.params=
comment9.target=int\ getRepeatOffsetY()
comment9.text=\r\n\ Retrieves\ the\ y\ offset\ for\ subsequent\ drawings\ of\ repeated\ shapes\r\n\r\n\ @return\ \ \ \ \ \ the\ y\ offset\ for\ subsequent\ shape\ drawings\r\n
numComments=16
